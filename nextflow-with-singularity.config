params.singularity_image_dir = '/SAN/orengolab/bfvd/singularity_images'

process {
    executor = 'local'
    // Or change to 'sge' to matche the HPC scheduler

    withName: extract_pdb_with_zip {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-pdb-tools_latest.sif"
    }
    withName: extract_pdb_with_tar {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-pdb-tools_latest.sif"
    }
    withName: chop_pdb {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-pdb-tools_latest.sif"
    }
    withName: run_merizo {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-merizo_latest.sif"
    }
    withName: run_unidoc {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-unidoc_latest.sif"
    }
    withName: run_chainsaw {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-chainsaw_latest.sif"
    }
    withName: collect_results {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: get_uniprot_data {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: collect_results_final {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: convert_files {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: create_md5 {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: summarise_stride {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: transform_consensus {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: run_get_consensus {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_consensus {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_domains {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_domains_reformatted {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_stride {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-cath-af-cli_latest.sif"
    }
    withName: run_AF_domain_id {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-cath-af-cli_latest.sif"
    }
    withName: run_measure_globularity {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-cath-af-cli_latest.sif"
    }
    withName: run_plddt {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
}

singularity {
    enabled = true
    autoMounts = true
    mode = "native"
}

params.unidoc_dir = "/app/UniDoc"
params.fetch_uniprot_script = "python3 /app/fetch_uniprot_data.py"
params.chainsaw_script = "python3 /app/chainsaw/get_predictions.py"
params.merizo_script = "python3 /app/Merizo/predict.py"
params.unidoc_script = "python3 /app/UniDoc/Run_UniDoc_from_scratch_structure.py"
params.prefilter_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/filter_domains.py"
params.getconsensus_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/get_consensus.py"
params.postfilter_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/filter_domains_consensus.py"
params.convert_script = "python3 /app/convert_merizo_unidoc_files.py"
params.combine_script = "python3 /app/combine_results.py"
params.chop_pdb_script = "python3 /app/chop_pdbs.py"
params.pdb_dir = "./results/pdbs"
params.results_dir = './results'
params.stride_summary_script = "python3 /app/create_stride_summary.py"
params.md5_script = "python3 /app/pdb_to_md5.py"
params.transform_script = "python3 /app/transform_consensus.py"
params.globularity_script = "cath-af-cli measure-globularity"
params.plddt_script = "python3 /app/fetch_avg_plDDT.py"
params.combine_final_script = "python3 /app/combine_results_final.py"
