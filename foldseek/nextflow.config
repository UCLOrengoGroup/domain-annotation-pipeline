docker.enabled = true

params {
    // Input parameters
    pdbs_dir = "../domain-annotation-pipeline/results/chopped_pdbs/chopped_pdbs" // chopped pdbs location
    target_db = "${projectDir}/../assets/DB"  // CATH database location
    outdir = "results"
    parser_script = "${projectDir}/../bin/format_fs_output.py"  // Set path to the m8 python parser script
    chunk_size = 25
}
// Process-specific configurations
process {
    withName: 'create_db' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
        beforeScript = 'export PATH="/Users/nick/Documents/CATH_update/Consensus_workflow/foldseek/foldseek/bin:$PATH"'
    }
    
    withName: 'run_foldseek' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
        ext.add_backtrace = true
        beforeScript = 'export PATH="/Users/nick/Documents/CATH_update/Consensus_workflow/foldseek/foldseek/bin:$PATH"'
    }
    
    withName: 'run_convertalis' {
        cpus = 2
        memory = '4.GB'
        time = '1.h'
        ext.format_output = 'query,target,fident,evalue,qlen,tlen,qtmscore,ttmscore,qcov,tcov'
        beforeScript = 'export PATH="/Users/nick/Documents/CATH_update/Consensus_workflow/foldseek/foldseek/bin:$PATH"'
    }
    
    withName: 'parse_foldseek' {
        cpus = 1
        memory = '2.GB'
        time = '30.min'
    }
}
profiles {
    // Batch1 - first batch of 114,360 chopped pdbs
    batch1 {
        params {
            project_name = 'batch1'
            chunk_size = 1000
            pdbs_dir = "../domain-annotation-pipeline/results/batch1/chopped_pdbs"
            target_db = "${projectDir}/../assets/DB"
            outdir = "${projectDir}/../foldseek_results/batch1"
            parser_script = "${projectDir}/../bin/format_fs_output.py"
        }
    }

    // Batch2 - second batch of 114,267 chopped pdbs
    batch2 {
        params {
            project_name = 'batch2'
            chunk_size = 1000
            pdbs_dir = "../domain-annotation-pipeline/results/batch2/chopped_pdbs"
            target_db = "${projectDir}/../assets/DB"
            outdir = "${projectDir}/../foldseek_results/batch2"
            parser_script = "${projectDir}/../bin/format_fs_output.py"
        }
    }

    // Batch3 - third batch of 114,108 chopped pdbs
    batch3 {
        params {
            project_name = 'batch3'
            chunk_size = 1000
            pdbs_dir = "../domain-annotation-pipeline/results/batch3/chopped_pdbs"
            target_db = "${projectDir}/../assets/DB"
            outdir = "${projectDir}/../foldseek_results/batch3"
            parser_script = "${projectDir}/../bin/format_fs_output.py"
        }
    }

    // Batch4 - fourth batch of 51,000 chopped pdbs
    batch4 {
        params {
            project_name = 'batch4'
            chunk_size = 1000
            pdbs_dir = "../domain-annotation-pipeline/results/batch4/chopped_pdbs"
            target_db = "${projectDir}/../assets/DB"
            outdir = "${projectDir}/../foldseek_results/batch4"
            parser_script = "${projectDir}/../bin/format_fs_output.py"
        }
    }
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']