params.singularity_image_dir = '/SAN/orengolab/bfvd/singularity_images'
params.scratch_dir = "/SAN/orengolab/bfvd/nextflow_scratch/${System.getenv('USER')}"

executor {
    name = 'sge'
    queueSize = 100
}

// ========== local PROCESS SETTINGS  ==========
process {
    withLabel: local {
        executor = 'local'
    }
    withLabel: sge_low {
        scratch = params.scratch_dir
        executor = 'sge'
        penv = { task.cpus > 1 ? 'smp' : '' }
        clusterOptions = {
            def mem = task.memory ? task.memory.mega : '7000'
            def cpus = task.cpus
            def baseOpts = "-S /bin/bash -l tmem=${mem}M,h_vmem=${mem}M "
            def peOpts = cpus > 1 ? " -R y " : ""
            return baseOpts + peOpts
        }
    }

    // ========== GPU PROCESS SETTINGS (SGE) ==========
    withLabel: sge_gpu_high {
        scratch = params.scratch_dir
        executor = 'sge'
        penv = { task.cpus > 1 ? 'smp' : '' }
        memory = '31GB'
        time = '23h'
        clusterOptions = '-S /bin/bash -l tmem=31G,h_vmem=31G -l gpu=true -l h_rt=23:00:00'
    }
    // ========== PROCESS SPECIFIC SETTINGS ==========

    withName: '.*' {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-pdb-tools_latest.sif"
    }
    withName: chop_pdb {
        scratch = params.scratch_dir
        executor = 'sge'
        memory = '31 GB'           // Much more memory
        time = '23h'               // Longer time limit
        penv = { task.cpus > 1 ? 'smp' : '' }
        clusterOptions = {
            def mem = task.memory ? task.memory.mega : '31000'
            def cpus = task.cpus
            def baseOpts = "-S /bin/bash -l tmem=${mem}M,h_vmem=${mem}M "
            def peOpts = cpus > 1 ? " -R y " : ""
            return baseOpts + peOpts
        }
        errorStrategy = 'retry'
        maxRetries = 2
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-pdb-tools_latest.sif"
    }
    
    withName: run_merizo {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-merizo_latest.sif"
    }
    withName: run_unidoc {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-unidoc_latest.sif"
    }
    withName: run_chainsaw {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-chainsaw_latest.sif"
    }
    withName: collect_results {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: get_uniprot_data {
        maxForks = 2
        errorStrategy = 'retry'
        maxRetries = 5
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: collect_results_final {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: convert_merizo_results {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: convert_unidoc_results {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: create_md5 {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: summarise_stride {
        executor = 'local'
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: transform_consensus {
        executor = 'local'
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: run_get_consensus {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_consensus {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_domains {
        executor = 'local'
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_domains_reformatted_merizo {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_filter_domains_reformatted_unidoc {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-ted-tools_latest.sif"
    }
    withName: run_stride {
        scratch = params.scratch_dir
        executor = 'sge'
        memory = '31 GB'           // Much more memory
        time = '12h'                // Longer time limit
        penv = { task.cpus > 1 ? 'smp' : '' }
        clusterOptions = {
            def mem = task.memory ? task.memory.mega : '31000'
            def cpus = task.cpus
            def baseOpts = "-S /bin/bash -l tmem=${mem}M,h_vmem=${mem}M "
            def peOpts = cpus > 1 ? " -R y " : ""
            return baseOpts + peOpts
        }
        errorStrategy = 'retry'
        maxRetries = 2
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-cath-af-cli_latest.sif"
    }
    withName: run_AF_domain_id {
        executor = 'local'
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-cath-af-cli_latest.sif"
    }
    withName: run_measure_globularity {
        scratch = params.scratch_dir
        executor = 'sge'
        memory = '31 GB'           // Much more memory
        time = '12h'                // Longer time limit
        penv = { task.cpus > 1 ? 'smp' : '' }
        clusterOptions = {
            def mem = task.memory ? task.memory.mega : '31000'
            def cpus = task.cpus
            def baseOpts = "-S /bin/bash -l tmem=${mem}M,h_vmem=${mem}M "
            def peOpts = cpus > 1 ? " -R y " : ""
            return baseOpts + peOpts
        }
        errorStrategy = 'retry'
        maxRetries = 2
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-cath-af-cli_latest.sif"
    }

    withName: run_plddt {
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-script_latest.sif"
    }
    withName: filter_pdb {
        executor = 'local'
        container = "${params.singularity_image_dir}/domain-annotation-pipeline-pdb-tools_latest.sif"
    }
}
// ========== SINGULARITY SETTINGS ==========
singularity {
    enabled = true
    autoMounts = true
    mode = "native"
}
