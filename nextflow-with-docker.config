docker.enabled = true
nextflow.enable.dsl=2

process {
    withName:cif_to_pdb {
        container = 'domain-annotation-pipeline-pdb-tools'
    }
    withName:run_merizo {
        container = 'domain-annotation-pipeline-merizo'
    }
    withName:run_unidoc {
        container = 'domain-annotation-pipeline-unidoc'
    }
    withName:run_chainsaw {
        container = 'domain-annotation-pipeline-chainsaw'
    }
    withName:collect_results {
        container = 'domain-annotation-pipeline-script'
    }
}

params.unidoc_dir = "/app/UniDoc"
params.chainsaw_script = "python3 /app/chainsaw/get_predictions.py"
params.merizo_script = "python3 /app/Merizo/predict.py"
params.unidoc_script = "python3 /app/UniDoc/Run_UniDoc_from_scratch_structure.py"
params.preFilter_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/filter_domains.py"
params.getConsensus_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/get_consensus.py"
params.postFilter_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/filter_domains_consensus.py"
params.combine_script = "python3 /app/combine_results.py"
params.chunk_size = 3        // the number of uniprot ids processed in each chunk of work 
params.cath_version = 'v4_3_0'
params.af_version = 4

params.alphafold_url_stem = "https://alphafold.ebi.ac.uk/files"
// params for the copping consensus programs
params.chopping_files = [
    './domain_assignments.merizo.tsv',
    './domain_assignments.chaninsaw.tsv',
    './domain_assignments.unidoc.tsv'
]