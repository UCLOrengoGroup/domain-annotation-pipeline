docker.enabled = true

process {
    withName:cif_to_pdb {
        container = 'domain-annotation-pipeline-pdb-tools'
    }
    withName:run_merizo {
        container = 'domain-annotation-pipeline-merizo'
    }
    withName:run_unidoc {
        container = 'domain-annotation-pipeline-unidoc'
    }
    withName:run_chainsaw {
        container = 'domain-annotation-pipeline-chainsaw'
    }
    withName:collect_results {
        container = 'domain-annotation-pipeline-script'
    }
    withName:run_get_consensus {
		container = 'domain-annotation-pipeline-ted-tools'
	}
    withName:run_stride {
		container = 'domain-annotation-pipeline-cath-af-cli'
	}
}

params.unidoc_dir = "/app/UniDoc"
params.chainsaw_script = "python3 /app/chainsaw/get_predictions.py"
params.merizo_script = "python3 /app/Merizo/predict.py"
params.unidoc_script = "python3 /app/UniDoc/Run_UniDoc_from_scratch_structure.py"
params.prefilter_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/filter_domains.py"
params.getconsensus_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/get_consensus.py"
params.postfilter_script = "python3 /app/ted-tools/ted_consensus_1.0/scripts/filter_domains_consensus.py"
params.convert_script = "python3 /app/convert_merizo_unidoc_files.py"
params.combine_script = "python3 /app/combine_results.py"
params.chop_pdb_script = "python3 /app/chop_pdbs_2.py"
params.pdb_dir = "./results/pdbs"
params.transform_script = "python3 /app/transform_consensus_2.py"
params.globularity_script = "cath-af-cli /app/measure_globularity_custom"